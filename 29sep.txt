 //Ask user to enter file path. Count number of words in that file, count number of numbers in that file.


package com.yash.io;
import java.io.BufferedReader;

import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;
public class countWordsandNumbers {
		
	@SuppressWarnings("null")
	public static void main(String[] args) throws IOException {
		Scanner scan=new Scanner(System.in);
		System.out.println("Enter the File Path:");
		String Filename=scan.nextLine();
		scan.close();
		String s=null;
		int count1=0;
		int flag=0;
		int count=0;
		int j=0;
		try{
			FileReader filereader=new FileReader(Filename);
			BufferedReader bufferedReader=new BufferedReader(filereader);

			while((s=bufferedReader.readLine())!=null){
				while (j < s.length()) {
			    	if (s.charAt(j) == ' ' || s.charAt(j) == '\n' || s.charAt(j) == '\t')
			        {
			           flag = 0;
			        }else if (flag == 0) {
			           flag = 1;
			           count++;
			        }
			        j++;
			     }
				for(int i=0;i<s.length();i++)
			      {
			        if(Character.isDigit(s.charAt(i)))
			        count1++;
			      }
			      System.out.println("\n"+s);
			      System.out.println("The string is: \n" + s);
			      System.out.println("No of numbers in the above string are: \n" + count1);
			      System.out.println("Numbers of words in file are:"+count);
			}
			bufferedReader.close();
		}catch(IOException e) {
			e.printStackTrace();
		}	
		     }
	}
2
package com.yash.io;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardOpenOption;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Collectors;

public class Replacewordinfile {

		private static int index;
		public static void main(String[] args) 
		{
			try(Scanner sc = new Scanner(System.in))
			{
			System.out.println("Enter file path :");
			String paths = sc.nextLine();
			File file = new File(paths);
				if(file.exists()) 
				{
					System.out.print("Enter Word to search : ");
					String search = sc.next();
					
					Path path = file.toPath();
					List<String> readAllLines = Files.readAllLines(path);
					readAllLines.forEach(x-> {
											index = x.indexOf(search);
										});
					
					if(index == -1) {
						System.out.println("***** Word not found ******");
						return;
					}
					
					System.out.print("Enter replacement word : ");
					String substitute = sc.next();
					
					readAllLines=readAllLines.stream().map(f -> f.replaceAll(search,substitute)).collect(Collectors.toList());
					Files.write(path, readAllLines,StandardOpenOption.WRITE);
					System.out.println("**** Operation completed ***** ");
					
				}
				else {
					System.out.println("File does not exist");
				}
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		
	}

3\package com.yash.io;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardOpenOption;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Collectors;

public class uppercase {
	public static void main(String[] args) {
		try(Scanner sc = new Scanner(System.in))
		{
			System.out.println("Enter file path :");
			String paths = sc.nextLine();
			File file = new File(paths);
				if(file.exists()) 
				{
					uppercase.alterWordsCase(file);
				}
				else {
					System.out.println("File does not exist");
				}
		} catch (IOException e) {
			e.printStackTrace();
		}	
	}
	
	public static void alterWordsCase(File file) throws IOException {
		Path path = file.toPath();
		List<String> readAllLines = Files.readAllLines(path);
		System.out.println("Input :");
		readAllLines.forEach(System.out::println);
		readAllLines = readAllLines.stream().map(x -> {
													String[] split = x.split(" ");
													StringBuilder builder = new StringBuilder();
													for(int i=0;i<split.length;i++) {
														if(i%2 != 0) {
															String next = split[i];
															builder.append(next.toUpperCase()).append(" ");
														}
														else {
															builder.append(split[i]).append(" ");
														}
													}
													return builder.toString();
												}).collect(Collectors.toList());
		
		Files.write(path, readAllLines, StandardOpenOption.WRITE);
		System.out.println("\n**** Operation completed Successfully *****");
		System.out.println("Output :");
		readAllLines.forEach(System.out::println);
	}
}

	